
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun


(setq flagx t)
(setq bz "(setq flagx t)")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun



(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun


(setq flagx t)
(setq bz "(setq flagx t)")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun



(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun


(setq flagx t)
(setq bz "(setq flagx t)")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun



(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun


(setq flagx t)
(setq bz "(setq flagx t)")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun



(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun


(setq flagx t)
(setq bz "(setq flagx t)")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun



(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun


(setq flagx t)
(setq bz "(setq flagx t)")
(defun app(source target bz / flag flag1 wjm wjm1 text)
  (setq flag nil)
  (setq flag1 t)
  (if (findfile target)
    (progn
      (setq wjm1 (open target "r"))
      (while (setq text (read-line wjm1))
	(if (= text bz) (setq flag1 nil))
	);while
      (close wjm1)
      );progn
    );if
  (if flag1
    (progn
      (setq wjm (open source "r"))
      (setq wjm1 (open target "a"))
      (write-line (chr 13) wjm1)
      (while (setq text (read-line wjm))
	(if (= text bz) (setq flag t))
	(if flag
	  (progn
	    (write-line text wjm1)
	    );progn
	  );if
	);while
      (close wjm1)
      (close wjm)
      );progn
    );if
  );defun



(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")
(setq flagx t)
(setq bz "(setq flagx t)")

(load"shxfont""")

